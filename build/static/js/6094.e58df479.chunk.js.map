{"version":3,"file":"static/js/6094.e58df479.chunk.js","mappings":"kLA8CA,IA7BmBA,IAEfC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACFF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,aAAYH,SAAEH,EAAMO,SAClCN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC/BE,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACC,UAAW,CAAEH,UAAW,OAAQH,SAAA,EAC1CF,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAe,CAACE,KAAK,IAAGP,SAAC,YAExBH,EAAMW,iBAAmB,IAAIC,KAAI,CAACC,EAAMC,IACjCD,EAAKE,QACVd,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAe,CAACO,QAAM,EAAAZ,SACpBU,EAAKG,OADqBF,IAI7Bb,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,KAAe,CAAaE,KAAMG,EAAKI,KAAKd,SAC1CU,EAAKG,OADcF,gB,kGCtBxC,MAAMI,EAAWC,IAAoC,IAAnC,OAAEC,GAA2BD,EAC3C,OACId,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,WAGlCF,EAAAA,EAAAA,KAAA,OAAKoB,GAAG,cAAcC,MAAO,CAAEC,SAAU,YAAcjB,UAAU,QAAOH,UACpEF,EAAAA,EAAAA,KAACuB,EAAAA,IAAG,CACAJ,OAAQA,EACRK,cAAe,CAAEC,IAAK,UAAWC,IAAK,YACtCC,KAAM,GACNN,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClDQ,mBAAoB,CAChBR,SAAUH,EAAOY,KAAKC,gBAAgBC,gBAIhD,EAIRC,EAAcC,IAAoC,IAAnC,OAAEhB,GAA2BgB,EAC9C,OACI/B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,aAClCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,QAAQgB,MAAO,CAAEC,SAAU,WAAYc,SAAU,UAAWlC,UACvEE,EAAAA,EAAAA,MAACmB,EAAAA,IAAG,CACAJ,OAAQA,EACRQ,KAAM,GACNH,cAAe,CAAEC,IAAK,UAAWC,IAAK,YACtCL,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClDQ,mBAAoB,CAChBR,SAAUH,EAAOY,KAAKC,gBAAgBC,UACxC/B,SAAA,EAEFF,EAAAA,EAAAA,KAACqC,EAAAA,OAAM,CACHC,KAAK,OACLhB,SAAU,CAAEG,IAAK,SAAUC,IAAK,YAChCpB,MAAM,kDAGVN,EAAAA,EAAAA,KAACqC,EAAAA,OAAM,CAACC,KAAK,eAAehB,SAAU,CAAEG,IAAK,SAAUC,IAAK,qBAGlE,EAIRa,EAAiBC,IAAoC,IAAnC,OAAErB,GAA2BqB,EAoEjD,OACIpC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,iBAElCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,QAAQgB,MAAO,CAAEC,SAAU,WAAYc,SAAU,UAAWlC,UACvEF,EAAAA,EAAAA,KAACuB,EAAAA,IAAG,CACAJ,OAAQA,EACRQ,KAAM,GACNH,cAAe,CAAEC,IAAK,WAAYC,KAAM,YACxCL,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClDmB,OA7EE,CACd,CACIC,YAAa,QACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,YACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,eACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,eACbC,YAAa,kBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEC,OAAQ,MAEjE,CACIL,YAAa,gBACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,aACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,MACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,WACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIH,YAAa,qBACbC,QAAS,CAAC,CAAEI,WAAY,MAAQ,CAAEH,MAAO,WAAa,CAAEC,UAAW,MAEvE,CACIH,YAAa,mBACbC,QAAS,CAAC,CAAEK,WAAY,IAAM,CAAEJ,MAAO,WAAa,CAAEC,UAAW,MAErE,CAAEH,YAAa,cAAeC,QAAS,CAAC,CAAEI,WAAY,SACtD,CACIN,YAAa,UACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,iBACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,iBACbC,YAAa,kBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEC,OAAQ,QAerDjB,mBAAoB,CAChBR,SAAUH,EAAOY,KAAKC,gBAAgBC,gBAIhD,EAIRiB,EAAgBC,IAAoC,IAAnC,OAAEhC,GAA2BgC,EA4HhD,OACI/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,UAElCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,QAAQgB,MAAO,CAAEC,SAAU,WAAYc,SAAU,UAAWlC,UACvEF,EAAAA,EAAAA,KAACuB,EAAAA,IAAG,CACAJ,OAAQA,EACRQ,KAAM,GACNH,cAAe,CAAEC,IAAK,WAAYC,KAAM,YACxCL,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClDmB,OArIE,CACd,CACIC,YAAa,MACbC,YAAa,SACbC,QAAS,CAAC,CAAEI,WAAY,QAE5B,CACIN,YAAa,MACbC,YAAa,mBACbC,QAAS,CAAC,CAAEK,WAAY,IAAM,CAAEJ,MAAO,WAAa,CAAEC,UAAW,MAErE,CACIJ,YAAa,MACbC,YAAa,qBACbC,QAAS,CAAC,CAAEI,WAAY,MAAQ,CAAEH,MAAO,WAAa,CAAEC,UAAW,MAEvE,CACIJ,YAAa,MACbC,YAAa,cACbC,QAAS,CAAC,CAAEI,WAAY,SAE5B,CACIN,YAAa,iBACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,iBACbC,YAAa,kBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEC,OAAQ,OAEjE,CACIL,YAAa,yBACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,0BACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,8BACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,YACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,MACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEE,WAAY,QAErE,CACIN,YAAa,eACbC,YAAa,WACbC,QAAS,CAAC,CAAEI,WAAY,QAE5B,CACIN,YAAa,eACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,OAEjD,CACIJ,YAAa,eACbC,YAAa,kBACbC,QAAS,CAAC,CAAEI,WAAY,SAE5B,CACIN,YAAa,eACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,eACbC,YAAa,qBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,gBACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,gBACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,gBACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,gBACbC,YAAa,qBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,aACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,aACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,UACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,QACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,OAerChB,mBAAoB,CAChBR,SAAUH,EAAOY,KAAKC,gBAAgBC,gBAIhD,EAIRmB,EAAeC,IAAoC,IAAnC,OAAElC,GAA2BkC,EAQ/C,OACIjD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,cAElCF,EAAAA,EAAAA,KAAA,OACIoB,GAAG,iBACHf,UAAU,QACVgB,MAAO,CAAEC,SAAU,WAAYc,SAAU,UAAWlC,UAEpDF,EAAAA,EAAAA,KAACuB,EAAAA,IAAG,CACAJ,OAAQA,EACRK,cAAe,CAAEC,KAAM,UAAWC,KAAM,WACxCL,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClDK,KAAM,GACNG,mBAAoB,CAChBR,SAAUH,EAAOY,KAAKC,gBAAgBC,UACxC/B,UAEFF,EAAAA,EAAAA,KAACsD,EAAAA,QAAO,CACJC,UAAU,UACVC,YAAa,GACbC,MA5BJ,CACZ,CAAEhC,KAAM,mBAAoBC,KAAM,mBAClC,CAAED,KAAM,mBAAoBC,KAAM,mBAClC,CAAED,KAAM,mBAAoBC,KAAM,mBAClC,CAAED,KAAM,mBAAoBC,KAAM,oBAyBlBgC,YAAY,UACZC,cAAe,EACfC,aAAc,UAIxB,EAIRC,EAAeC,IAAoC,IAAnC,OAAE3C,GAA2B2C,EAO/C,OACI1D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,cAElCF,EAAAA,EAAAA,KAAA,OACIoB,GAAG,iBACHf,UAAU,QACVgB,MAAO,CAAEC,SAAU,WAAYc,SAAU,UAAWlC,UAEpDF,EAAAA,EAAAA,KAACuB,EAAAA,IAAG,CACAJ,OAAQA,EACRK,cAAe,CAAEC,KAAM,UAAWC,KAAM,WACxCL,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClDK,KAAM,GACNG,mBAAoB,CAChBR,SAAUH,EAAOY,KAAKC,gBAAgBC,UACxC/B,UAEFF,EAAAA,EAAAA,KAAC+D,EAAAA,SAAQ,CACLR,UAAU,UACVC,YAAa,GACbxC,KA3BH,CACb,CAAES,KAAM,mBAAoBC,KAAM,mBAClC,CAAED,KAAM,mBAAoBC,KAAM,mBAClC,CAAED,KAAM,mBAAoBC,KAAM,oBAyBlBgC,YAAY,UACZC,cAAe,EACfC,aAAc,UAIxB,EAIRI,EAAgBC,IAAoC,IAAnC,OAAE9C,GAA2B8C,EAC5CC,GAAcC,EAAAA,EAAAA,UAclB,OACI/D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,sCAElCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,QAAQgB,MAAO,CAAEC,SAAU,WAAYc,SAAU,UAAWlC,UACvEF,EAAAA,EAAAA,KAACuB,EAAAA,IAAG,CACAJ,OAAQA,EACRiD,IAAMzD,GAAcuD,EAASvD,EAC7BgB,KAAM,GACNH,cAAe,CAAEC,IAAK,WAAYC,KAAM,YACxCL,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClD+C,QAASA,KApBG/C,KACxB,GAAI4C,EAAQ,CACR,MAAMI,EAASJ,EAAOvD,IAAI4D,gBAC1BD,EAAOE,OAAO,CAAEC,QAAS,GAAIC,MAAO,KACpCJ,EAAOK,YAAYrD,GACnBgD,EAAOM,YAAW,EACtB,GAegBC,CAAmB,CAAEpD,IAAK,WAAYC,KAAM,YAAa,QAInE,EAIRoD,EAAmBC,IAAoC,IAAnC,OAAE5D,GAA2B4D,EACnD,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAc,CAAC,IAChDC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAc,CAAC,IAClDG,EAAmBC,IAAwBJ,EAAAA,EAAAA,WAAkB,GAmBpE,OACI9E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,oBAAmBH,SAAC,uBAClCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,QAAQgB,MAAO,CAAEC,SAAU,WAAYc,SAAU,UAAWlC,UACvEE,EAAAA,EAAAA,MAACmB,EAAAA,IAAG,CACAJ,OAAQA,EACRQ,KAAM,GACNH,cAAe,CAAEC,IAAK,UAAWC,IAAK,YACtCL,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQP,SAAU,YAClDQ,mBAAoB,CAChBR,SAAUH,EAAOY,KAAKC,gBAAgBC,UACxC/B,SAAA,EAGFF,EAAAA,EAAAA,KAACqC,EAAAA,OAAM,CACH/B,MAAO,sBACPgC,KAAM,mBACNiD,QA5BOC,KACvBC,MAAM,6BAA6B,EA4BnBnE,SAAU,CAAEG,IAAK,SAAUC,IAAK,eAIpC1B,EAAAA,EAAAA,KAACqC,EAAAA,OAAM,CACHC,KAAK,mBACLhC,MAAO,yBACPiF,QA/BEG,CAAC3F,EAAY4F,EAAaC,KAC5CX,EAAgBU,GAChBP,EAAiBrF,GACjBuF,GAAqB,EAAK,EA6BVhE,SAAU,CAAEG,IAAK,SAAUC,IAAK,eAEpC1B,EAAAA,EAAAA,KAAC6F,EAAAA,WAAU,CACPF,OAAQX,EACRc,QA/CMC,KACtBd,EAAgB,MAChBK,GAAqB,EAAM,EA8CXU,QAASX,EAAkBnF,UAE3BF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,KAAAE,SAAIiF,EAAc7C,kBAKhC,EAuDd,WAAe2D,EAAAA,EAAAA,kBAAiB,CAC5BC,OAAQC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,yCADxB,EAnDmBC,IAAoC,IAAnC,OAAElF,GAA2BkF,EAC7C,OACIjG,EAAAA,EAAAA,MAACkG,EAAAA,SAAc,CAAApG,SAAA,EACXF,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CACN7F,gBAAiB,CACb,CAAEK,MAAO,OAAQC,KAAM,kBACvB,CAAED,MAAO,cAAeC,KAAM,iBAAkBF,QAAQ,IAE5DR,MAAO,iBAGXF,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAACiB,EAAQ,CAACE,OAAQA,OAGtBnB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAACkC,EAAW,CAACf,OAAQA,UAI7Bf,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAACuC,EAAc,CAACpB,OAAQA,OAE5BnB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAACkD,EAAa,CAAC/B,OAAQA,UAI/Bf,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAAC6D,EAAY,CAAC1C,OAAQA,OAE1BnB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAACoD,EAAY,CAACjC,OAAQA,UAI9Bf,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAACgE,EAAa,CAAC7C,OAAQA,OAE3BnB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACqG,GAAI,EAAEtG,UACPF,EAAAA,EAAAA,KAAC8E,EAAgB,CAAC3D,OAAQA,WAGrB,G","sources":["components/PageTitle.tsx","pages/maps/GoogleMaps.tsx"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useRef, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Map, Marker, GoogleApiWrapper, InfoWindow, Polygon, Polyline } from \"google-maps-react\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\ninterface MapContainerProps {\n    google: any;\n}\n\nconst BasicMap = ({ google }: MapContainerProps) => {\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Basic</h4>\n\n            {/* basic map */}\n            <div id=\"gmaps-basic\" style={{ position: \"relative\" }} className=\"gmaps\">\n                <Map\n                    google={google}\n                    initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                    zoom={14}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}\n                ></Map>\n            </div>\n        </div>\n    );\n};\n\nconst WithMarkers = ({ google }: MapContainerProps) => {\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Markers</h4>\n            <div className=\"gmaps\" style={{ position: \"relative\", overflow: \"hidden\" }}>\n                <Map\n                    google={google}\n                    zoom={18}\n                    initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}\n                >\n                    <Marker\n                        name=\"SOMA\"\n                        position={{ lat: 21.56956, lng: 71.5892598 }}\n                        title=\"The marker`s title will appear as a tooltip.\"\n                    />\n\n                    <Marker name=\"Dolores park\" position={{ lat: 21.56969, lng: 71.5893798 }} />\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst LightStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: \"water\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#e9e9e9\" }, { lightness: 17 }],\n        },\n        {\n            featureType: \"landscape\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#f5f5f5\" }, { lightness: 20 }],\n        },\n        {\n            featureType: \"road.highway\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 17 }],\n        },\n        {\n            featureType: \"road.highway\",\n            elementType: \"geometry.stroke\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        {\n            featureType: \"road.arterial\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 18 }],\n        },\n        {\n            featureType: \"road.local\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#ffffff\" }, { lightness: 16 }],\n        },\n        {\n            featureType: \"poi\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#f5f5f5\" }, { lightness: 21 }],\n        },\n        {\n            featureType: \"poi.park\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#dedede\" }, { lightness: 21 }],\n        },\n        {\n            elementType: \"labels.text.stroke\",\n            stylers: [{ visibility: \"on\" }, { color: \"#ffffff\" }, { lightness: 16 }],\n        },\n        {\n            elementType: \"labels.text.fill\",\n            stylers: [{ saturation: 36 }, { color: \"#333333\" }, { lightness: 40 }],\n        },\n        { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\n        {\n            featureType: \"transit\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#f2f2f2\" }, { lightness: 19 }],\n        },\n        {\n            featureType: \"administrative\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#fefefe\" }, { lightness: 20 }],\n        },\n        {\n            featureType: \"administrative\",\n            elementType: \"geometry.stroke\",\n            stylers: [{ color: \"#fefefe\" }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Ultra Light</h4>\n\n            <div className=\"gmaps\" style={{ position: \"relative\", overflow: \"hidden\" }}>\n                <Map\n                    google={google}\n                    zoom={14}\n                    initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    styles={mapStyles}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}\n                ></Map>\n            </div>\n        </div>\n    );\n};\n\nconst DarkStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: \"all\",\n            elementType: \"labels\",\n            stylers: [{ visibility: \"on\" }],\n        },\n        {\n            featureType: \"all\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ saturation: 36 }, { color: \"#000000\" }, { lightness: 40 }],\n        },\n        {\n            featureType: \"all\",\n            elementType: \"labels.text.stroke\",\n            stylers: [{ visibility: \"on\" }, { color: \"#000000\" }, { lightness: 16 }],\n        },\n        {\n            featureType: \"all\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }],\n        },\n        {\n            featureType: \"administrative\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#000000\" }, { lightness: 20 }],\n        },\n        {\n            featureType: \"administrative\",\n            elementType: \"geometry.stroke\",\n            stylers: [{ color: \"#000000\" }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        {\n            featureType: \"administrative.country\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#e5c163\" }],\n        },\n        {\n            featureType: \"administrative.locality\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#c4c4c4\" }],\n        },\n        {\n            featureType: \"administrative.neighborhood\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#e5c163\" }],\n        },\n        {\n            featureType: \"landscape\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#000000\" }, { lightness: 20 }],\n        },\n        {\n            featureType: \"poi\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#000000\" }, { lightness: 21 }, { visibility: \"on\" }],\n        },\n        {\n            featureType: \"poi.business\",\n            elementType: \"geometry\",\n            stylers: [{ visibility: \"on\" }],\n        },\n        {\n            featureType: \"road.highway\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#e5c163\" }, { lightness: \"0\" }],\n        },\n        {\n            featureType: \"road.highway\",\n            elementType: \"geometry.stroke\",\n            stylers: [{ visibility: \"off\" }],\n        },\n        {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#ffffff\" }],\n        },\n        {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.stroke\",\n            stylers: [{ color: \"#e5c163\" }],\n        },\n        {\n            featureType: \"road.arterial\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#000000\" }, { lightness: 18 }],\n        },\n        {\n            featureType: \"road.arterial\",\n            elementType: \"geometry.fill\",\n            stylers: [{ color: \"#575757\" }],\n        },\n        {\n            featureType: \"road.arterial\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#ffffff\" }],\n        },\n        {\n            featureType: \"road.arterial\",\n            elementType: \"labels.text.stroke\",\n            stylers: [{ color: \"#2c2c2c\" }],\n        },\n        {\n            featureType: \"road.local\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#000000\" }, { lightness: 16 }],\n        },\n        {\n            featureType: \"road.local\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#999999\" }],\n        },\n        {\n            featureType: \"transit\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#000000\" }, { lightness: 19 }],\n        },\n        {\n            featureType: \"water\",\n            elementType: \"geometry\",\n            stylers: [{ color: \"#000000\" }, { lightness: 17 }],\n        },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Dark</h4>\n\n            <div className=\"gmaps\" style={{ position: \"relative\", overflow: \"hidden\" }}>\n                <Map\n                    google={google}\n                    zoom={14}\n                    initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    styles={mapStyles}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}\n                ></Map>\n            </div>\n        </div>\n    );\n};\n\nconst WithPolygons = ({ google }: MapContainerProps) => {\n    const polygon = [\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\n        { lat: -12.040248585302038, lng: -77.03993927003302 },\n        { lat: -12.050047116528843, lng: -77.02448169303511 },\n        { lat: -12.044804866577001, lng: -77.02154422636042 },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Polygons</h4>\n\n            <div\n                id=\"gmaps-polygons\"\n                className=\"gmaps\"\n                style={{ position: \"relative\", overflow: \"hidden\" }}\n            >\n                <Map\n                    google={google}\n                    initialCenter={{ lat: -12.043333, lng: -77.028333 }}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    zoom={14}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}\n                >\n                    <Polygon\n                        fillColor=\"#BBD8E9\"\n                        fillOpacity={0.6}\n                        paths={polygon}\n                        strokeColor=\"#BBD8E9\"\n                        strokeOpacity={1}\n                        strokeWeight={3}\n                    />\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst WithPolyline = ({ google }: MapContainerProps) => {\n    const polyline = [\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\n        { lat: -12.048138585302038, lng: -77.03593927003302 },\n        { lat: -12.044804866577001, lng: -77.02454422636042 },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Polyline</h4>\n\n            <div\n                id=\"gmaps-polygons\"\n                className=\"gmaps\"\n                style={{ position: \"relative\", overflow: \"hidden\" }}\n            >\n                <Map\n                    google={google}\n                    initialCenter={{ lat: -12.043333, lng: -77.028333 }}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    zoom={14}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}\n                >\n                    <Polyline\n                        fillColor=\"#BBD8E9\"\n                        fillOpacity={0.6}\n                        path={polyline}\n                        strokeColor=\"#BBD8E9\"\n                        strokeOpacity={1}\n                        strokeWeight={3}\n                    />\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst StreetViewMap = ({ google }: MapContainerProps) => {\n    let mapRef: any = useRef();\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = (position: { lat: number; lng: number }) => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n            <div className=\"gmaps\" style={{ position: \"relative\", overflow: \"hidden\" }}>\n                <Map\n                    google={google}\n                    ref={(map: any) => (mapRef = map)}\n                    zoom={14}\n                    initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    onReady={() => {\n                        activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                    }}\n                ></Map>\n            </div>\n        </div>\n    );\n};\n\nconst ClickableMarkers = ({ google }: MapContainerProps) => {\n    const [activeMarker, setActiveMarker] = useState<any>({});\n    const [selectedPlace, setSelectedPlace] = useState<any>({});\n    const [showingInfoWindow, setShowingInfoWindow] = useState<boolean>(false);\n\n    const onInfoWindowClose = () => {\n        setActiveMarker(null);\n        setShowingInfoWindow(false);\n    };\n\n    // handles operation on marker click\n    const onBasicMarkerClick = () => {\n        alert(\"You clicked in this marker\");\n    };\n\n    // handles operation on marker click\n    const onMarkerClick = (props: any, marker: any, e: any) => {\n        setActiveMarker(marker);\n        setSelectedPlace(props);\n        setShowingInfoWindow(true);\n    };\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Clickable Markers</h4>\n            <div className=\"gmaps\" style={{ position: \"relative\", overflow: \"hidden\" }}>\n                <Map\n                    google={google}\n                    zoom={18}\n                    initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                    style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}\n                >\n                    {/* basic marker */}\n                    <Marker\n                        title={\"This is sweet home.\"}\n                        name={\"Home sweet home!\"}\n                        onClick={onBasicMarkerClick}\n                        position={{ lat: 21.56956, lng: 71.5892598 }}\n                    />\n\n                    {/* clickable marker */}\n                    <Marker\n                        name=\"Current location\"\n                        title={\"Marker with InfoWindow\"}\n                        onClick={onMarkerClick}\n                        position={{ lat: 21.56969, lng: 71.5893798 }}\n                    />\n                    <InfoWindow\n                        marker={activeMarker}\n                        onClose={onInfoWindowClose}\n                        visible={showingInfoWindow}\n                    >\n                        <div>\n                            <p>{selectedPlace.name}</p>\n                        </div>\n                    </InfoWindow>\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst GoogleMaps = ({ google }: MapContainerProps) => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"Maps\", path: \"/ui/googlemaps\" },\n                    { label: \"Google Maps\", path: \"/ui/googlemaps\", active: true },\n                ]}\n                title={\"Google Maps\"}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <BasicMap google={google} />\n                </Col>\n\n                <Col lg={6}>\n                    <WithMarkers google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <LightStyledMap google={google} />\n                </Col>\n                <Col lg={6}>\n                    <DarkStyledMap google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <WithPolyline google={google} />\n                </Col>\n                <Col lg={6}>\n                    <WithPolygons google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <StreetViewMap google={google} />\n                </Col>\n                <Col lg={6}>\n                    <ClickableMarkers google={google} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default GoogleApiWrapper({\n    apiKey: process.env.AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA,\n})(GoogleMaps);\n"],"names":["props","_jsx","Row","children","Col","_jsxs","className","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","BasicMap","_ref","google","id","style","position","Map","initialCenter","lat","lng","zoom","width","height","zoomControlOptions","maps","ControlPosition","LEFT_TOP","WithMarkers","_ref2","overflow","Marker","name","LightStyledMap","_ref3","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","_ref4","WithPolygons","_ref5","Polygon","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","WithPolyline","_ref6","Polyline","StreetViewMap","_ref7","mapRef","useRef","ref","onReady","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","activateStreetView","ClickableMarkers","_ref8","activeMarker","setActiveMarker","useState","selectedPlace","setSelectedPlace","showingInfoWindow","setShowingInfoWindow","onClick","onBasicMarkerClick","alert","onMarkerClick","marker","e","InfoWindow","onClose","onInfoWindowClose","visible","GoogleApiWrapper","apiKey","process","AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA","_ref9","React","PageTitle","lg"],"sourceRoot":""}